import { Profile } from "service/care-information/types";

export interface FilterRegistrationButton {
  value: FilterRegistrationline;
  label: string;
}

export enum FilterRegistrationline {
  AC11A = "AC11A", // AC-1.3
  AC11B = "AC11B", // AC-1.4",
  AC12 = "AC12", // "AC-1.5",
  //   A16 = "A16", // "AC-1.6",
}

export interface FilterPropertyFormButton {
  value: FilterPropertyFormLine;
  label: string;
}

export enum FilterPropertyFormLine {
  state = 111,
  locally = 222,
  personal = 333,
}

export interface FilterOwnerShipButton {
  value: FilterOwnerShipFormLine;
  label: string;
}

export enum FilterOwnerShipFormLine {
  locally = 1,
  for_rent = 2,
  rent_without_sweat = 3,
}

export interface FilterRoomNumberButton {
  value: FilterRoomNumbersLine;
  label: string;
}

export enum FilterRoomNumbersLine {
  one_or_three = 1,
  four_or_five = 2,
  up_sex = 3,
}
export interface FilterSourceWaterButton {
  value: FilterSourceWaterLine;
  label: string;
}

export enum FilterSourceWaterLine {
  focused = 1,
  decentralized = 2,
}

export interface FilterDisablityFromRoomButton {
  value: FilterDisablityFromRoomLine;
  label: string;
}

export enum FilterDisablityFromRoomLine {
  have = true, // AC-1.3
  none = false, // AC-1.4",
}

export interface FilterMaintenanceDoneButton {
  value: FilterMaintenanceDoneLine;
  label: string;
}

export enum FilterMaintenanceDoneLine {
  yes = true,
  no = false,
}

export interface FilterHeatingSourceButton {
  value: FilterHeatingSourceLine;
  label: string;
}

export enum FilterHeatingSourceLine {
  focused = 1,
  decentralized = 2,
  state = 3,
}

export interface FilterOperationsPossibleButton {
  value: FilterMaintenanceDoneLine;
  label: string;
}

export enum FilterOperationsPossibleLine {
  yes = 1,
  no = 0,
}

// export interface FilterRegistrationRoomButton {
//   value: FilterDisablityFromRoomLine;
//   label: string;
// }

// export enum FilterRegistrationWaterline {
//   dec = "dec", // AC-1.3
//   con = "con", // AC-1.4",
// }

// export interface FilterRegistrationWaterButton {
//   value: FilterRegistrationWaterline;
//   label: string;
// }

// export enum FilterRegistrationWorkingline {
//   yes = "yes", // AC-1.3
//   no = "no", // AC-1.4",
// }

// export interface FilterRegistrationWorkingButton {
//   value: FilterRegistrationWorkingline;
//   label: string;
// }

export enum RESPONSIBILITY_TYPE_ENUM {
  joint_stock_company = 10,
  limited_liability_Company = 11,
  all_members_responsible_partnership = 20,
  some_members_responsible_partnership = 21,
  cooperative = 30,
  state_owned_industrial_estate = 40,
  localle_owned_industrial_estate = 41,
  budgetary_organization = 60,
  non_governmental_organization = 70,
  San = 71,
  others = 80,
}

export enum PROPERTY_TYPE_ENUM {
  state_owned = 11,
  state_equity_participation = 12,
  state_joind = 13,
  local_owned = 31,
  local_equity_participation = 32,
  local_joind = 33,
  personal_mongolia = 21,
  personal_joint_country = 22,
  personal_foreign_country = 23,
}

// Generated by https://quicktype.io

// Generated by https://quicktype.io

export interface AC11ATYPE {
  bed_count: number;
  building: string;
  chair_count: number;
  city_id: number;
  pay_location: any;
  location: any;
  logo_id: any;
  company_name: string;
  company_rd: string;
  contact_email: string;
  contact_first_name: string;
  contact_last_name: string;
  contact_phone_number: string;
  contact_position: string;
  district_id: number;
  door_number: string;
  email: string;
  facebook: string;
  khoroo_id: number;
  phone_number: string;
  possible_peaople_number: number;
  property_type: string;
  responsibility_type: string;
  start_date: string;
  street: string;
  table_count: number;
  website: string;
  payment: any;
}

export interface GETAC11A {
  id: number;
  created_at: string;
  updated_at: string;
  care_center_id: number;
  company_rd: string;
  city: any;
  district: any;
  payment: any;
  logo: Profile;
  khoroo: any;
  city_id: number;
  district_id: number;
  khoroo_id: number;
  street: string;
  building: string;
  door_number: string;
  longitude: any;
  latitude: any;
  phone_number: string;
  email: string;
  website: string;
  facebook: string;
  start_date: string;
  responsibility_type: number;
  property_type: number;
  possible_people_number: number;
  bed_count: number;
  table_count: number;
  chair_count: number;
  contact_first_name: string;
  contact_last_name: string;
  contact_position: string;
  contact_phone_number: string;
  contact_email: string;
}

// Generated by https://quicktype.io

export interface GETAC12TYPE {
  id: number;
  created_at: string;
  updated_at: string;
  care_center_id: number;
  income: Income;
  expenses: Expenses;
  real_estate?: RealEstate;
  movable_assets: MovableAssets;
}

export interface Expenses {
  raw_materials: number;
  goods_purchased_for_sale: number;
  service: number;
  salary: number;
  other: number;
  taxes_and_fees: number;
  total: number;
  profit_and_loss: number;
}

export interface Income {
  sales_revenue: number;
  subsidy_from_government: number;
  non_core: number;
  other: number;
  total: number;
}

export interface MovableAssets {
  vehicles_equipment: number;
  supply_materials: number;
  bed: number;
  table: number;
  chair: number;
  animal: number;
}

export interface RealEstate {
  residential: number;
  non_residential: number;
  land: number;
  equipment: number;
  furniture: number;
}
export interface GETAC11TYPE {
  id: number;
  created_at: string;
  updated_at: string;
  care_center_id: number;
  buildings: Building[];
  equipment: Equipment;
  bed_count: number;
  table_count: number;
  chair_count: number;
  computer_count: number;
  animal_count: number;
}

export interface Building {
  id: number;
  created_at: string;
  updated_at: string;
  document_type_ac11b_id: number;
  full_address: string;
  date_of_construction: string;
  hot_water_supply: number;
  property_type: number;
  possession_type: number;
  room_count_type: number;
  source_of_water: number;
  heat_source: number;
  is_have_train_room: boolean;
  is_have_disable_person_toilet: boolean;
  is_have_disable_person_sanitary_facilities: boolean;
  area: Area;
  toilet: Toilet;
  pit_toilet: PitToilet;
  maintenance: Maintenance;
}

export interface Area {
  total: number;
  residential: number;
  for_service: number;
  other: number;
}

export interface Maintenance {
  is_done: boolean;
  is_further_possible: boolean;
  date_of_major_renovation: string;
  major_renovation_amount: number;
  date_of_maintenance: string;
  date_of_maintenance_amount: number;
}

export interface PitToilet {
  improved: number;
  simple: number;
  open_hole: number;
  bio: number;
}

export interface Toilet {
  connected_centralized: number;
  flow: number;
  flow_pit: number;
}

export interface Equipment {
  is_have_vehicles: boolean;
  car_count: number;
  truck_count: number;
  bus_count: number;
  motorcycle_count: number;
  special_purpose_count: number;
  company_owned_count: number;
  other_owned_count: number;
}

export interface AC12TYPE {
  expenses: Expenses;
  income: Income;
  movable_assets: MovableAssets;
  real_estate: RealEstate;
}

export interface Expenses {
  goods_purchased_for_sale: number;
  other: number;
  profit_and_loss: number;
  raw_materials: number;
  salary: number;
  service: number;
  taxes_and_fees: number;
  total: number;
}

export interface Income {
  non_core: number;
  other: number;
  sales_revenue: number;
  subsidy_from_government: number;
  total: number;
}

export interface MovableAssets {
  animal: number;
  bed: number;
  chair: number;
  supply_materials: number;
  table: number;
  vehicles_equipment: number;
}

export interface RealEstate {
  equipment: number;
  land: number;
  non_residential: number;
  residential: number;
  furniture: number;
}

// Generated by https://quicktype.io

export interface AC11BTYPE {
  animal_count: number;
  bed_count: number;
  buildings: Building[];
  care_center_id: number;
  chair_count: number;
  computer_count: number;
  equipment: Equipment;
  table_count: number;
}

export interface Building {
  area: Area;
  date_of_construction: string;
  address: string;
  heat_source: number;
  hot_water_supply: number;
  is_have_disable_person_sanitary_facilities: boolean;
  is_have_disable_person_toilet: boolean;
  is_have_train_room: boolean;
  maintenance: Maintenance;
  pit_toilet: PitToilet;
  possession_type: number;
  property_type: number;
  room_count_type: number;
  source_of_water: number;
  toilet: Toilet;
}

export interface Area {
  for_service: number;
  other: number;
  residential: number;
  total: number;
}

export interface Maintenance {
  date_of_maintenance: string;
  date_of_maintenance_amount: number;
  date_of_major_renovation: string;
  is_done: boolean;
  is_further_possible: boolean;
  major_renovation_amount: number;
}

export interface PitToilet {
  bio: number;
  improved: number;
  open_hole: number;
  simple: number;
}

export interface Toilet {
  connected_centralized: number;
  flow: number;
  flow_pit: number;
}

export interface Equipment {
  bus_count: number;
  car_count: number;
  company_owned_count: number;
  is_have_vehicles: boolean;
  motorcycle_count: number;
  other_owned_count: number;
  special_purpose_count: number;
  truck_count: number;
}

// Generated by https://quicktype.io

export interface CareCenterStatusType {
  id: number;
  created_at: string;
  updated_at: string;
  care_center_id: number;
  approved_date: string;
  return_description: string;
  status: number;
  approved_user_id: null;
}
